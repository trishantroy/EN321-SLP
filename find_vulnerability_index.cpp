#include <iostream>
#include <string>

#include "vulnerability_analysis_functions.h"

namespace vaf = vulnerability_analysis_functions;

vaf::bus_system stevenson_example;
vaf::directed_graph example_1;

void define_bus_system(){
	stevenson_example.number_of_buses = 4;
}

void get_directed_graph(){
	example_1.generate_vertices(7);	
	example_1.edges.push_back(vaf::directed_edge(1,2,17));
	example_1.edges.push_back(vaf::directed_edge(2,3,7));
	example_1.edges.push_back(vaf::directed_edge(2,4,10));
	example_1.edges.push_back(vaf::directed_edge(3,5,6));
	example_1.edges.push_back(vaf::directed_edge(3,7,3));
	example_1.edges.push_back(vaf::directed_edge(4,5,7));
	example_1.edges.push_back(vaf::directed_edge(4,6,5));
	example_1.edges.push_back(vaf::directed_edge(5,6,2));
	example_1.edges.push_back(vaf::directed_edge(5,7,4));
	example_1.edges.push_back(vaf::directed_edge(6,7,8));
}

int main(int argc, char const *argv[])
{
	// define_bus_system();
	get_directed_graph();
	double max_flow = example_1.find_maximum_flow(1,7);
	std::cout << "Maximum flow: " << max_flow << std::endl;

	return 0;
}